/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
	"github.com/shopspring/decimal"
)

// checks if the JitFundingApi type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JitFundingApi{}

// JitFundingApi Contains information about the JIT Funding load event, in which funds are loaded into an account.  This object is returned if your program uses JIT Funding.
type JitFundingApi struct {
	AccountNameVerification *JitAccountNameVerification `json:"account_name_verification,omitempty"`
	// User who conducted the transaction.  Can be a child user configured to share its parent's account balance.
	ActingUserToken *string `json:"acting_user_token,omitempty"`
	AddressVerification *JitAddressVerification `json:"address_verification,omitempty"`
	// Requested amount of funding.
	Amount decimal.Decimal `json:"amount"`
	// Contains the GPA's balance details.
	Balances *map[string]CardholderBalance `json:"balances,omitempty"`
	// Holder of the business account that was funded.
	BusinessToken *string `json:"business_token,omitempty"`
	// Reason why the transaction was declined.
	DeclineReason *string `json:"decline_reason,omitempty"`
	// Array of tokens referencing the JIT Funding tokens of all previous associated incremental authorization JIT Funding requests. Useful for ascertaining the final transaction amount when the original amount was incremented.
	IncrementalAuthorizationJitFundingTokens []string `json:"incremental_authorization_jit_funding_tokens,omitempty"`
	JitAccountNameVerification *JitAccountNameVerification `json:"jit_account_name_verification,omitempty"`
	// Additional information that describes the JIT Funding transaction.
	Memo *string `json:"memo,omitempty"`
	// JIT Funding response type. See <</core-api/gateway-jit-funding-messages#_the_jit_funding_object, The jit_funding object>> for the purpose, funding event type, and description of each method.
	Method string `json:"method"`
	// Unique identifier of the first associated JIT Funding message. Useful for correlating related JIT Funding messages (that is, those associated with the same GPA order). Not included in the first of any set of related messages.
	OriginalJitFundingToken *string `json:"original_jit_funding_token,omitempty"`
	// Customer-defined tags related to the JIT Funding transaction.
	Tags *string `json:"tags,omitempty"`
	// Existing JIT Funding token matching the `funding.gateway_log.transaction_id` field of the associated GPA order.  *NOTE:* The `transaction_id` field updates if a subsequent JIT Funding message associated with that GPA order is sent. If multiple JIT Funding messages are associated with the same GPA order, the `transaction_id` field matches the token of the most recent message.
	Token string `json:"token"`
	// Holder of the user account that was funded.
	UserToken string `json:"user_token"`
}

type _JitFundingApi JitFundingApi

// NewJitFundingApi instantiates a new JitFundingApi object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJitFundingApi(amount decimal.Decimal, method string, token string, userToken string) *JitFundingApi {
	this := JitFundingApi{}
	this.Amount = amount
	this.Method = method
	this.Token = token
	this.UserToken = userToken
	return &this
}

// NewJitFundingApiWithDefaults instantiates a new JitFundingApi object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJitFundingApiWithDefaults() *JitFundingApi {
	this := JitFundingApi{}
	return &this
}

// GetAccountNameVerification returns the AccountNameVerification field value if set, zero value otherwise.
func (o *JitFundingApi) GetAccountNameVerification() JitAccountNameVerification {
	if o == nil || IsNil(o.AccountNameVerification) {
		var ret JitAccountNameVerification
		return ret
	}
	return *o.AccountNameVerification
}

// GetAccountNameVerificationOk returns a tuple with the AccountNameVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetAccountNameVerificationOk() (*JitAccountNameVerification, bool) {
	if o == nil || IsNil(o.AccountNameVerification) {
		return nil, false
	}
	return o.AccountNameVerification, true
}

// HasAccountNameVerification returns a boolean if a field has been set.
func (o *JitFundingApi) HasAccountNameVerification() bool {
	if o != nil && !IsNil(o.AccountNameVerification) {
		return true
	}

	return false
}

// SetAccountNameVerification gets a reference to the given JitAccountNameVerification and assigns it to the AccountNameVerification field.
func (o *JitFundingApi) SetAccountNameVerification(v JitAccountNameVerification) {
	o.AccountNameVerification = &v
}

// GetActingUserToken returns the ActingUserToken field value if set, zero value otherwise.
func (o *JitFundingApi) GetActingUserToken() string {
	if o == nil || IsNil(o.ActingUserToken) {
		var ret string
		return ret
	}
	return *o.ActingUserToken
}

// GetActingUserTokenOk returns a tuple with the ActingUserToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetActingUserTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ActingUserToken) {
		return nil, false
	}
	return o.ActingUserToken, true
}

// HasActingUserToken returns a boolean if a field has been set.
func (o *JitFundingApi) HasActingUserToken() bool {
	if o != nil && !IsNil(o.ActingUserToken) {
		return true
	}

	return false
}

// SetActingUserToken gets a reference to the given string and assigns it to the ActingUserToken field.
func (o *JitFundingApi) SetActingUserToken(v string) {
	o.ActingUserToken = &v
}

// GetAddressVerification returns the AddressVerification field value if set, zero value otherwise.
func (o *JitFundingApi) GetAddressVerification() JitAddressVerification {
	if o == nil || IsNil(o.AddressVerification) {
		var ret JitAddressVerification
		return ret
	}
	return *o.AddressVerification
}

// GetAddressVerificationOk returns a tuple with the AddressVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetAddressVerificationOk() (*JitAddressVerification, bool) {
	if o == nil || IsNil(o.AddressVerification) {
		return nil, false
	}
	return o.AddressVerification, true
}

// HasAddressVerification returns a boolean if a field has been set.
func (o *JitFundingApi) HasAddressVerification() bool {
	if o != nil && !IsNil(o.AddressVerification) {
		return true
	}

	return false
}

// SetAddressVerification gets a reference to the given JitAddressVerification and assigns it to the AddressVerification field.
func (o *JitFundingApi) SetAddressVerification(v JitAddressVerification) {
	o.AddressVerification = &v
}

// GetAmount returns the Amount field value
func (o *JitFundingApi) GetAmount() decimal.Decimal {
	if o == nil {
		var ret decimal.Decimal
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetAmountOk() (*decimal.Decimal, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *JitFundingApi) SetAmount(v decimal.Decimal) {
	o.Amount = v
}

// GetBalances returns the Balances field value if set, zero value otherwise.
func (o *JitFundingApi) GetBalances() map[string]CardholderBalance {
	if o == nil || IsNil(o.Balances) {
		var ret map[string]CardholderBalance
		return ret
	}
	return *o.Balances
}

// GetBalancesOk returns a tuple with the Balances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetBalancesOk() (*map[string]CardholderBalance, bool) {
	if o == nil || IsNil(o.Balances) {
		return nil, false
	}
	return o.Balances, true
}

// HasBalances returns a boolean if a field has been set.
func (o *JitFundingApi) HasBalances() bool {
	if o != nil && !IsNil(o.Balances) {
		return true
	}

	return false
}

// SetBalances gets a reference to the given map[string]CardholderBalance and assigns it to the Balances field.
func (o *JitFundingApi) SetBalances(v map[string]CardholderBalance) {
	o.Balances = &v
}

// GetBusinessToken returns the BusinessToken field value if set, zero value otherwise.
func (o *JitFundingApi) GetBusinessToken() string {
	if o == nil || IsNil(o.BusinessToken) {
		var ret string
		return ret
	}
	return *o.BusinessToken
}

// GetBusinessTokenOk returns a tuple with the BusinessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetBusinessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessToken) {
		return nil, false
	}
	return o.BusinessToken, true
}

// HasBusinessToken returns a boolean if a field has been set.
func (o *JitFundingApi) HasBusinessToken() bool {
	if o != nil && !IsNil(o.BusinessToken) {
		return true
	}

	return false
}

// SetBusinessToken gets a reference to the given string and assigns it to the BusinessToken field.
func (o *JitFundingApi) SetBusinessToken(v string) {
	o.BusinessToken = &v
}

// GetDeclineReason returns the DeclineReason field value if set, zero value otherwise.
func (o *JitFundingApi) GetDeclineReason() string {
	if o == nil || IsNil(o.DeclineReason) {
		var ret string
		return ret
	}
	return *o.DeclineReason
}

// GetDeclineReasonOk returns a tuple with the DeclineReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetDeclineReasonOk() (*string, bool) {
	if o == nil || IsNil(o.DeclineReason) {
		return nil, false
	}
	return o.DeclineReason, true
}

// HasDeclineReason returns a boolean if a field has been set.
func (o *JitFundingApi) HasDeclineReason() bool {
	if o != nil && !IsNil(o.DeclineReason) {
		return true
	}

	return false
}

// SetDeclineReason gets a reference to the given string and assigns it to the DeclineReason field.
func (o *JitFundingApi) SetDeclineReason(v string) {
	o.DeclineReason = &v
}

// GetIncrementalAuthorizationJitFundingTokens returns the IncrementalAuthorizationJitFundingTokens field value if set, zero value otherwise.
func (o *JitFundingApi) GetIncrementalAuthorizationJitFundingTokens() []string {
	if o == nil || IsNil(o.IncrementalAuthorizationJitFundingTokens) {
		var ret []string
		return ret
	}
	return o.IncrementalAuthorizationJitFundingTokens
}

// GetIncrementalAuthorizationJitFundingTokensOk returns a tuple with the IncrementalAuthorizationJitFundingTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetIncrementalAuthorizationJitFundingTokensOk() ([]string, bool) {
	if o == nil || IsNil(o.IncrementalAuthorizationJitFundingTokens) {
		return nil, false
	}
	return o.IncrementalAuthorizationJitFundingTokens, true
}

// HasIncrementalAuthorizationJitFundingTokens returns a boolean if a field has been set.
func (o *JitFundingApi) HasIncrementalAuthorizationJitFundingTokens() bool {
	if o != nil && !IsNil(o.IncrementalAuthorizationJitFundingTokens) {
		return true
	}

	return false
}

// SetIncrementalAuthorizationJitFundingTokens gets a reference to the given []string and assigns it to the IncrementalAuthorizationJitFundingTokens field.
func (o *JitFundingApi) SetIncrementalAuthorizationJitFundingTokens(v []string) {
	o.IncrementalAuthorizationJitFundingTokens = v
}

// GetJitAccountNameVerification returns the JitAccountNameVerification field value if set, zero value otherwise.
func (o *JitFundingApi) GetJitAccountNameVerification() JitAccountNameVerification {
	if o == nil || IsNil(o.JitAccountNameVerification) {
		var ret JitAccountNameVerification
		return ret
	}
	return *o.JitAccountNameVerification
}

// GetJitAccountNameVerificationOk returns a tuple with the JitAccountNameVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetJitAccountNameVerificationOk() (*JitAccountNameVerification, bool) {
	if o == nil || IsNil(o.JitAccountNameVerification) {
		return nil, false
	}
	return o.JitAccountNameVerification, true
}

// HasJitAccountNameVerification returns a boolean if a field has been set.
func (o *JitFundingApi) HasJitAccountNameVerification() bool {
	if o != nil && !IsNil(o.JitAccountNameVerification) {
		return true
	}

	return false
}

// SetJitAccountNameVerification gets a reference to the given JitAccountNameVerification and assigns it to the JitAccountNameVerification field.
func (o *JitFundingApi) SetJitAccountNameVerification(v JitAccountNameVerification) {
	o.JitAccountNameVerification = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *JitFundingApi) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *JitFundingApi) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *JitFundingApi) SetMemo(v string) {
	o.Memo = &v
}

// GetMethod returns the Method field value
func (o *JitFundingApi) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *JitFundingApi) SetMethod(v string) {
	o.Method = v
}

// GetOriginalJitFundingToken returns the OriginalJitFundingToken field value if set, zero value otherwise.
func (o *JitFundingApi) GetOriginalJitFundingToken() string {
	if o == nil || IsNil(o.OriginalJitFundingToken) {
		var ret string
		return ret
	}
	return *o.OriginalJitFundingToken
}

// GetOriginalJitFundingTokenOk returns a tuple with the OriginalJitFundingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetOriginalJitFundingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalJitFundingToken) {
		return nil, false
	}
	return o.OriginalJitFundingToken, true
}

// HasOriginalJitFundingToken returns a boolean if a field has been set.
func (o *JitFundingApi) HasOriginalJitFundingToken() bool {
	if o != nil && !IsNil(o.OriginalJitFundingToken) {
		return true
	}

	return false
}

// SetOriginalJitFundingToken gets a reference to the given string and assigns it to the OriginalJitFundingToken field.
func (o *JitFundingApi) SetOriginalJitFundingToken(v string) {
	o.OriginalJitFundingToken = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *JitFundingApi) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *JitFundingApi) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *JitFundingApi) SetTags(v string) {
	o.Tags = &v
}

// GetToken returns the Token field value
func (o *JitFundingApi) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *JitFundingApi) SetToken(v string) {
	o.Token = v
}

// GetUserToken returns the UserToken field value
func (o *JitFundingApi) GetUserToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserToken
}

// GetUserTokenOk returns a tuple with the UserToken field value
// and a boolean to check if the value has been set.
func (o *JitFundingApi) GetUserTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserToken, true
}

// SetUserToken sets field value
func (o *JitFundingApi) SetUserToken(v string) {
	o.UserToken = v
}

func (o JitFundingApi) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JitFundingApi) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountNameVerification) {
		toSerialize["account_name_verification"] = o.AccountNameVerification
	}
	if !IsNil(o.ActingUserToken) {
		toSerialize["acting_user_token"] = o.ActingUserToken
	}
	if !IsNil(o.AddressVerification) {
		toSerialize["address_verification"] = o.AddressVerification
	}
	toSerialize["amount"] = o.Amount
	if !IsNil(o.Balances) {
		toSerialize["balances"] = o.Balances
	}
	if !IsNil(o.BusinessToken) {
		toSerialize["business_token"] = o.BusinessToken
	}
	if !IsNil(o.DeclineReason) {
		toSerialize["decline_reason"] = o.DeclineReason
	}
	if !IsNil(o.IncrementalAuthorizationJitFundingTokens) {
		toSerialize["incremental_authorization_jit_funding_tokens"] = o.IncrementalAuthorizationJitFundingTokens
	}
	if !IsNil(o.JitAccountNameVerification) {
		toSerialize["jit_account_name_verification"] = o.JitAccountNameVerification
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	toSerialize["method"] = o.Method
	if !IsNil(o.OriginalJitFundingToken) {
		toSerialize["original_jit_funding_token"] = o.OriginalJitFundingToken
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["token"] = o.Token
	toSerialize["user_token"] = o.UserToken
	return toSerialize, nil
}

func (o *JitFundingApi) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"method",
		"token",
		//"user_token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varJitFundingApi := _JitFundingApi{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varJitFundingApi)

	if err != nil {
		return err
	}

	*o = JitFundingApi(varJitFundingApi)

	return err
}

type NullableJitFundingApi struct {
	value *JitFundingApi
	isSet bool
}

func (v NullableJitFundingApi) Get() *JitFundingApi {
	return v.value
}

func (v *NullableJitFundingApi) Set(val *JitFundingApi) {
	v.value = val
	v.isSet = true
}

func (v NullableJitFundingApi) IsSet() bool {
	return v.isSet
}

func (v *NullableJitFundingApi) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJitFundingApi(val *JitFundingApi) *NullableJitFundingApi {
	return &NullableJitFundingApi{value: val, isSet: true}
}

func (v NullableJitFundingApi) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJitFundingApi) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


