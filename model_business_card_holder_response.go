/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the BusinessCardHolderResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BusinessCardHolderResponse{}

// BusinessCardHolderResponse struct for BusinessCardHolderResponse
type BusinessCardHolderResponse struct {
	// Associates the specified account holder group with the business.  This field is returned if it exists in the resource.
	AccountHolderGroupToken *string `json:"account_holder_group_token,omitempty"`
	// Specifies if the business is in the `ACTIVE` state on the Marqeta platform.  This field is returned if it exists in the resource.
	Active *bool `json:"active,omitempty"`
	// Indicates that the attester agrees that the information provided is correct and truthful.  This field is returned if it exists in the resource.
	AttestationConsent *bool `json:"attestation_consent,omitempty"`
	// Timestamp of the attestation.  This field is returned if it exists in the resource.
	AttestationDate *time.Time `json:"attestation_date,omitempty"`
	// Name of the attester for KYC verification.  This field is returned if it exists in the resource.
	AttesterName *string `json:"attester_name,omitempty"`
	// Title of the attester for KYC verification.  This field is returned if it exists in the resource.
	AttesterTitle *string `json:"attester_title,omitempty"`
	Authentication *Authentication `json:"authentication,omitempty"`
	BeneficialOwner1 *BeneficialOwnerResponse `json:"beneficial_owner1,omitempty"`
	BeneficialOwner2 *BeneficialOwnerResponse `json:"beneficial_owner2,omitempty"`
	BeneficialOwner3 *BeneficialOwnerResponse `json:"beneficial_owner3,omitempty"`
	BeneficialOwner4 *BeneficialOwnerResponse `json:"beneficial_owner4,omitempty"`
	// Fictitious business name (\"Doing Business As\" or DBA).  This field is returned if it exists in the resource.
	BusinessNameDba *string `json:"business_name_dba,omitempty"`
	// Legal name of the business.  This field is returned if it exists in the resource.
	BusinessNameLegal *string `json:"business_name_legal,omitempty"`
	// Indicates the type of business, for example B2B (business-to-business) or B2C (business-to-consumer).  This field is returned if it exists in the resource.
	BusinessType *string `json:"business_type,omitempty"`
	// Date and time when the business was created, in UTC.
	CreatedTime time.Time `json:"created_time"`
	// Date and time when the business was established.  This field is returned if it exists in the resource.
	DateEstablished *time.Time `json:"date_established,omitempty"`
	// Data Universal Numbering System (DUNS) number of the business.  This field is returned if it exists in the resource.
	DunsNumber *string `json:"duns_number,omitempty"`
	// General description of the business.  This field is returned if it exists in the resource.
	GeneralBusinessDescription *string `json:"general_business_description,omitempty"`
	// History of the business.  This field is returned if it exists in the resource.
	History *string `json:"history,omitempty"`
	// One or more objects containing identifications associated with the business.  Objects are returned if they exist in the resource.
	Identifications []IdentificationResponseModel `json:"identifications,omitempty"`
	// Date on which the business office opened in its current location.  This field is returned if it exists in the resource.
	InCurrentLocationSince *time.Time `json:"in_current_location_since,omitempty"`
	Incorporation *BusinessIncorporationResponse `json:"incorporation,omitempty"`
	// Locations of the business' offices outside the US.  This field is returned if it exists in the resource.
	InternationalOfficeLocations *string `json:"international_office_locations,omitempty"`
	// IP address of the business.  This field is returned if it exists in the resource.
	IpAddress *string `json:"ip_address,omitempty"`
	// Date and time when the business was last modified, in UTC.
	LastModifiedTime time.Time `json:"last_modified_time"`
	// Associates any additional metadata you provide with the business.  Metadata is returned if it exists in the resource.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// Any additional information pertaining to the business.  This field is returned if it exists in the resource.
	Notes *string `json:"notes,omitempty"`
	OfficeLocation *AddressResponseModel `json:"office_location,omitempty"`
	// Password for the business account on the Marqeta platform.  This field is returned if it exists in the resource.
	Password *string `json:"password,omitempty"`
	// 10-digit telephone number of the business.  This field is returned if it exists in the resource.
	Phone *string `json:"phone,omitempty"`
	PrimaryContact *PrimaryContactInfoModel `json:"primary_contact,omitempty"`
	// Indicates that the proprietor or officer of the business is also a beneficial owner.  This field is returned if it exists in the resource.
	ProprietorIsBeneficialOwner *bool `json:"proprietor_is_beneficial_owner,omitempty"`
	ProprietorOrOfficer *BusinessProprietorResponse `json:"proprietor_or_officer,omitempty"`
	// Specifies the state of the business on the Marqeta platform.  This field is returned if it exists in the resource.
	Status *string `json:"status,omitempty"`
	// Taxpayer identifier of the business.  This field is returned if it exists in the resource.
	TaxpayerId *string `json:"taxpayer_id,omitempty"`
	// Unique identifier of the business resource.  This field is always returned.
	Token *string `json:"token,omitempty"`
	// URL of the business' website.  This field is returned if it exists in the resource.
	Website *string `json:"website,omitempty"`
}

type _BusinessCardHolderResponse BusinessCardHolderResponse

// NewBusinessCardHolderResponse instantiates a new BusinessCardHolderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusinessCardHolderResponse(createdTime time.Time, lastModifiedTime time.Time) *BusinessCardHolderResponse {
	this := BusinessCardHolderResponse{}
	var active bool = false
	this.Active = &active
	var attestationConsent bool = false
	this.AttestationConsent = &attestationConsent
	this.CreatedTime = createdTime
	this.LastModifiedTime = lastModifiedTime
	var proprietorIsBeneficialOwner bool = false
	this.ProprietorIsBeneficialOwner = &proprietorIsBeneficialOwner
	return &this
}

// NewBusinessCardHolderResponseWithDefaults instantiates a new BusinessCardHolderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusinessCardHolderResponseWithDefaults() *BusinessCardHolderResponse {
	this := BusinessCardHolderResponse{}
	var active bool = false
	this.Active = &active
	var attestationConsent bool = false
	this.AttestationConsent = &attestationConsent
	var proprietorIsBeneficialOwner bool = false
	this.ProprietorIsBeneficialOwner = &proprietorIsBeneficialOwner
	return &this
}

// GetAccountHolderGroupToken returns the AccountHolderGroupToken field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetAccountHolderGroupToken() string {
	if o == nil || IsNil(o.AccountHolderGroupToken) {
		var ret string
		return ret
	}
	return *o.AccountHolderGroupToken
}

// GetAccountHolderGroupTokenOk returns a tuple with the AccountHolderGroupToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetAccountHolderGroupTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccountHolderGroupToken) {
		return nil, false
	}
	return o.AccountHolderGroupToken, true
}

// HasAccountHolderGroupToken returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasAccountHolderGroupToken() bool {
	if o != nil && !IsNil(o.AccountHolderGroupToken) {
		return true
	}

	return false
}

// SetAccountHolderGroupToken gets a reference to the given string and assigns it to the AccountHolderGroupToken field.
func (o *BusinessCardHolderResponse) SetAccountHolderGroupToken(v string) {
	o.AccountHolderGroupToken = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *BusinessCardHolderResponse) SetActive(v bool) {
	o.Active = &v
}

// GetAttestationConsent returns the AttestationConsent field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetAttestationConsent() bool {
	if o == nil || IsNil(o.AttestationConsent) {
		var ret bool
		return ret
	}
	return *o.AttestationConsent
}

// GetAttestationConsentOk returns a tuple with the AttestationConsent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetAttestationConsentOk() (*bool, bool) {
	if o == nil || IsNil(o.AttestationConsent) {
		return nil, false
	}
	return o.AttestationConsent, true
}

// HasAttestationConsent returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasAttestationConsent() bool {
	if o != nil && !IsNil(o.AttestationConsent) {
		return true
	}

	return false
}

// SetAttestationConsent gets a reference to the given bool and assigns it to the AttestationConsent field.
func (o *BusinessCardHolderResponse) SetAttestationConsent(v bool) {
	o.AttestationConsent = &v
}

// GetAttestationDate returns the AttestationDate field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetAttestationDate() time.Time {
	if o == nil || IsNil(o.AttestationDate) {
		var ret time.Time
		return ret
	}
	return *o.AttestationDate
}

// GetAttestationDateOk returns a tuple with the AttestationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetAttestationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AttestationDate) {
		return nil, false
	}
	return o.AttestationDate, true
}

// HasAttestationDate returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasAttestationDate() bool {
	if o != nil && !IsNil(o.AttestationDate) {
		return true
	}

	return false
}

// SetAttestationDate gets a reference to the given time.Time and assigns it to the AttestationDate field.
func (o *BusinessCardHolderResponse) SetAttestationDate(v time.Time) {
	o.AttestationDate = &v
}

// GetAttesterName returns the AttesterName field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetAttesterName() string {
	if o == nil || IsNil(o.AttesterName) {
		var ret string
		return ret
	}
	return *o.AttesterName
}

// GetAttesterNameOk returns a tuple with the AttesterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetAttesterNameOk() (*string, bool) {
	if o == nil || IsNil(o.AttesterName) {
		return nil, false
	}
	return o.AttesterName, true
}

// HasAttesterName returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasAttesterName() bool {
	if o != nil && !IsNil(o.AttesterName) {
		return true
	}

	return false
}

// SetAttesterName gets a reference to the given string and assigns it to the AttesterName field.
func (o *BusinessCardHolderResponse) SetAttesterName(v string) {
	o.AttesterName = &v
}

// GetAttesterTitle returns the AttesterTitle field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetAttesterTitle() string {
	if o == nil || IsNil(o.AttesterTitle) {
		var ret string
		return ret
	}
	return *o.AttesterTitle
}

// GetAttesterTitleOk returns a tuple with the AttesterTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetAttesterTitleOk() (*string, bool) {
	if o == nil || IsNil(o.AttesterTitle) {
		return nil, false
	}
	return o.AttesterTitle, true
}

// HasAttesterTitle returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasAttesterTitle() bool {
	if o != nil && !IsNil(o.AttesterTitle) {
		return true
	}

	return false
}

// SetAttesterTitle gets a reference to the given string and assigns it to the AttesterTitle field.
func (o *BusinessCardHolderResponse) SetAttesterTitle(v string) {
	o.AttesterTitle = &v
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetAuthentication() Authentication {
	if o == nil || IsNil(o.Authentication) {
		var ret Authentication
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetAuthenticationOk() (*Authentication, bool) {
	if o == nil || IsNil(o.Authentication) {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasAuthentication() bool {
	if o != nil && !IsNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given Authentication and assigns it to the Authentication field.
func (o *BusinessCardHolderResponse) SetAuthentication(v Authentication) {
	o.Authentication = &v
}

// GetBeneficialOwner1 returns the BeneficialOwner1 field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetBeneficialOwner1() BeneficialOwnerResponse {
	if o == nil || IsNil(o.BeneficialOwner1) {
		var ret BeneficialOwnerResponse
		return ret
	}
	return *o.BeneficialOwner1
}

// GetBeneficialOwner1Ok returns a tuple with the BeneficialOwner1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetBeneficialOwner1Ok() (*BeneficialOwnerResponse, bool) {
	if o == nil || IsNil(o.BeneficialOwner1) {
		return nil, false
	}
	return o.BeneficialOwner1, true
}

// HasBeneficialOwner1 returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasBeneficialOwner1() bool {
	if o != nil && !IsNil(o.BeneficialOwner1) {
		return true
	}

	return false
}

// SetBeneficialOwner1 gets a reference to the given BeneficialOwnerResponse and assigns it to the BeneficialOwner1 field.
func (o *BusinessCardHolderResponse) SetBeneficialOwner1(v BeneficialOwnerResponse) {
	o.BeneficialOwner1 = &v
}

// GetBeneficialOwner2 returns the BeneficialOwner2 field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetBeneficialOwner2() BeneficialOwnerResponse {
	if o == nil || IsNil(o.BeneficialOwner2) {
		var ret BeneficialOwnerResponse
		return ret
	}
	return *o.BeneficialOwner2
}

// GetBeneficialOwner2Ok returns a tuple with the BeneficialOwner2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetBeneficialOwner2Ok() (*BeneficialOwnerResponse, bool) {
	if o == nil || IsNil(o.BeneficialOwner2) {
		return nil, false
	}
	return o.BeneficialOwner2, true
}

// HasBeneficialOwner2 returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasBeneficialOwner2() bool {
	if o != nil && !IsNil(o.BeneficialOwner2) {
		return true
	}

	return false
}

// SetBeneficialOwner2 gets a reference to the given BeneficialOwnerResponse and assigns it to the BeneficialOwner2 field.
func (o *BusinessCardHolderResponse) SetBeneficialOwner2(v BeneficialOwnerResponse) {
	o.BeneficialOwner2 = &v
}

// GetBeneficialOwner3 returns the BeneficialOwner3 field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetBeneficialOwner3() BeneficialOwnerResponse {
	if o == nil || IsNil(o.BeneficialOwner3) {
		var ret BeneficialOwnerResponse
		return ret
	}
	return *o.BeneficialOwner3
}

// GetBeneficialOwner3Ok returns a tuple with the BeneficialOwner3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetBeneficialOwner3Ok() (*BeneficialOwnerResponse, bool) {
	if o == nil || IsNil(o.BeneficialOwner3) {
		return nil, false
	}
	return o.BeneficialOwner3, true
}

// HasBeneficialOwner3 returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasBeneficialOwner3() bool {
	if o != nil && !IsNil(o.BeneficialOwner3) {
		return true
	}

	return false
}

// SetBeneficialOwner3 gets a reference to the given BeneficialOwnerResponse and assigns it to the BeneficialOwner3 field.
func (o *BusinessCardHolderResponse) SetBeneficialOwner3(v BeneficialOwnerResponse) {
	o.BeneficialOwner3 = &v
}

// GetBeneficialOwner4 returns the BeneficialOwner4 field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetBeneficialOwner4() BeneficialOwnerResponse {
	if o == nil || IsNil(o.BeneficialOwner4) {
		var ret BeneficialOwnerResponse
		return ret
	}
	return *o.BeneficialOwner4
}

// GetBeneficialOwner4Ok returns a tuple with the BeneficialOwner4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetBeneficialOwner4Ok() (*BeneficialOwnerResponse, bool) {
	if o == nil || IsNil(o.BeneficialOwner4) {
		return nil, false
	}
	return o.BeneficialOwner4, true
}

// HasBeneficialOwner4 returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasBeneficialOwner4() bool {
	if o != nil && !IsNil(o.BeneficialOwner4) {
		return true
	}

	return false
}

// SetBeneficialOwner4 gets a reference to the given BeneficialOwnerResponse and assigns it to the BeneficialOwner4 field.
func (o *BusinessCardHolderResponse) SetBeneficialOwner4(v BeneficialOwnerResponse) {
	o.BeneficialOwner4 = &v
}

// GetBusinessNameDba returns the BusinessNameDba field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetBusinessNameDba() string {
	if o == nil || IsNil(o.BusinessNameDba) {
		var ret string
		return ret
	}
	return *o.BusinessNameDba
}

// GetBusinessNameDbaOk returns a tuple with the BusinessNameDba field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetBusinessNameDbaOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessNameDba) {
		return nil, false
	}
	return o.BusinessNameDba, true
}

// HasBusinessNameDba returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasBusinessNameDba() bool {
	if o != nil && !IsNil(o.BusinessNameDba) {
		return true
	}

	return false
}

// SetBusinessNameDba gets a reference to the given string and assigns it to the BusinessNameDba field.
func (o *BusinessCardHolderResponse) SetBusinessNameDba(v string) {
	o.BusinessNameDba = &v
}

// GetBusinessNameLegal returns the BusinessNameLegal field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetBusinessNameLegal() string {
	if o == nil || IsNil(o.BusinessNameLegal) {
		var ret string
		return ret
	}
	return *o.BusinessNameLegal
}

// GetBusinessNameLegalOk returns a tuple with the BusinessNameLegal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetBusinessNameLegalOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessNameLegal) {
		return nil, false
	}
	return o.BusinessNameLegal, true
}

// HasBusinessNameLegal returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasBusinessNameLegal() bool {
	if o != nil && !IsNil(o.BusinessNameLegal) {
		return true
	}

	return false
}

// SetBusinessNameLegal gets a reference to the given string and assigns it to the BusinessNameLegal field.
func (o *BusinessCardHolderResponse) SetBusinessNameLegal(v string) {
	o.BusinessNameLegal = &v
}

// GetBusinessType returns the BusinessType field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetBusinessType() string {
	if o == nil || IsNil(o.BusinessType) {
		var ret string
		return ret
	}
	return *o.BusinessType
}

// GetBusinessTypeOk returns a tuple with the BusinessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetBusinessTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BusinessType) {
		return nil, false
	}
	return o.BusinessType, true
}

// HasBusinessType returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasBusinessType() bool {
	if o != nil && !IsNil(o.BusinessType) {
		return true
	}

	return false
}

// SetBusinessType gets a reference to the given string and assigns it to the BusinessType field.
func (o *BusinessCardHolderResponse) SetBusinessType(v string) {
	o.BusinessType = &v
}

// GetCreatedTime returns the CreatedTime field value
func (o *BusinessCardHolderResponse) GetCreatedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTime, true
}

// SetCreatedTime sets field value
func (o *BusinessCardHolderResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = v
}

// GetDateEstablished returns the DateEstablished field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetDateEstablished() time.Time {
	if o == nil || IsNil(o.DateEstablished) {
		var ret time.Time
		return ret
	}
	return *o.DateEstablished
}

// GetDateEstablishedOk returns a tuple with the DateEstablished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetDateEstablishedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateEstablished) {
		return nil, false
	}
	return o.DateEstablished, true
}

// HasDateEstablished returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasDateEstablished() bool {
	if o != nil && !IsNil(o.DateEstablished) {
		return true
	}

	return false
}

// SetDateEstablished gets a reference to the given time.Time and assigns it to the DateEstablished field.
func (o *BusinessCardHolderResponse) SetDateEstablished(v time.Time) {
	o.DateEstablished = &v
}

// GetDunsNumber returns the DunsNumber field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetDunsNumber() string {
	if o == nil || IsNil(o.DunsNumber) {
		var ret string
		return ret
	}
	return *o.DunsNumber
}

// GetDunsNumberOk returns a tuple with the DunsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetDunsNumberOk() (*string, bool) {
	if o == nil || IsNil(o.DunsNumber) {
		return nil, false
	}
	return o.DunsNumber, true
}

// HasDunsNumber returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasDunsNumber() bool {
	if o != nil && !IsNil(o.DunsNumber) {
		return true
	}

	return false
}

// SetDunsNumber gets a reference to the given string and assigns it to the DunsNumber field.
func (o *BusinessCardHolderResponse) SetDunsNumber(v string) {
	o.DunsNumber = &v
}

// GetGeneralBusinessDescription returns the GeneralBusinessDescription field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetGeneralBusinessDescription() string {
	if o == nil || IsNil(o.GeneralBusinessDescription) {
		var ret string
		return ret
	}
	return *o.GeneralBusinessDescription
}

// GetGeneralBusinessDescriptionOk returns a tuple with the GeneralBusinessDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetGeneralBusinessDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.GeneralBusinessDescription) {
		return nil, false
	}
	return o.GeneralBusinessDescription, true
}

// HasGeneralBusinessDescription returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasGeneralBusinessDescription() bool {
	if o != nil && !IsNil(o.GeneralBusinessDescription) {
		return true
	}

	return false
}

// SetGeneralBusinessDescription gets a reference to the given string and assigns it to the GeneralBusinessDescription field.
func (o *BusinessCardHolderResponse) SetGeneralBusinessDescription(v string) {
	o.GeneralBusinessDescription = &v
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetHistory() string {
	if o == nil || IsNil(o.History) {
		var ret string
		return ret
	}
	return *o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetHistoryOk() (*string, bool) {
	if o == nil || IsNil(o.History) {
		return nil, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasHistory() bool {
	if o != nil && !IsNil(o.History) {
		return true
	}

	return false
}

// SetHistory gets a reference to the given string and assigns it to the History field.
func (o *BusinessCardHolderResponse) SetHistory(v string) {
	o.History = &v
}

// GetIdentifications returns the Identifications field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetIdentifications() []IdentificationResponseModel {
	if o == nil || IsNil(o.Identifications) {
		var ret []IdentificationResponseModel
		return ret
	}
	return o.Identifications
}

// GetIdentificationsOk returns a tuple with the Identifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetIdentificationsOk() ([]IdentificationResponseModel, bool) {
	if o == nil || IsNil(o.Identifications) {
		return nil, false
	}
	return o.Identifications, true
}

// HasIdentifications returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasIdentifications() bool {
	if o != nil && !IsNil(o.Identifications) {
		return true
	}

	return false
}

// SetIdentifications gets a reference to the given []IdentificationResponseModel and assigns it to the Identifications field.
func (o *BusinessCardHolderResponse) SetIdentifications(v []IdentificationResponseModel) {
	o.Identifications = v
}

// GetInCurrentLocationSince returns the InCurrentLocationSince field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetInCurrentLocationSince() time.Time {
	if o == nil || IsNil(o.InCurrentLocationSince) {
		var ret time.Time
		return ret
	}
	return *o.InCurrentLocationSince
}

// GetInCurrentLocationSinceOk returns a tuple with the InCurrentLocationSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetInCurrentLocationSinceOk() (*time.Time, bool) {
	if o == nil || IsNil(o.InCurrentLocationSince) {
		return nil, false
	}
	return o.InCurrentLocationSince, true
}

// HasInCurrentLocationSince returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasInCurrentLocationSince() bool {
	if o != nil && !IsNil(o.InCurrentLocationSince) {
		return true
	}

	return false
}

// SetInCurrentLocationSince gets a reference to the given time.Time and assigns it to the InCurrentLocationSince field.
func (o *BusinessCardHolderResponse) SetInCurrentLocationSince(v time.Time) {
	o.InCurrentLocationSince = &v
}

// GetIncorporation returns the Incorporation field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetIncorporation() BusinessIncorporationResponse {
	if o == nil || IsNil(o.Incorporation) {
		var ret BusinessIncorporationResponse
		return ret
	}
	return *o.Incorporation
}

// GetIncorporationOk returns a tuple with the Incorporation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetIncorporationOk() (*BusinessIncorporationResponse, bool) {
	if o == nil || IsNil(o.Incorporation) {
		return nil, false
	}
	return o.Incorporation, true
}

// HasIncorporation returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasIncorporation() bool {
	if o != nil && !IsNil(o.Incorporation) {
		return true
	}

	return false
}

// SetIncorporation gets a reference to the given BusinessIncorporationResponse and assigns it to the Incorporation field.
func (o *BusinessCardHolderResponse) SetIncorporation(v BusinessIncorporationResponse) {
	o.Incorporation = &v
}

// GetInternationalOfficeLocations returns the InternationalOfficeLocations field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetInternationalOfficeLocations() string {
	if o == nil || IsNil(o.InternationalOfficeLocations) {
		var ret string
		return ret
	}
	return *o.InternationalOfficeLocations
}

// GetInternationalOfficeLocationsOk returns a tuple with the InternationalOfficeLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetInternationalOfficeLocationsOk() (*string, bool) {
	if o == nil || IsNil(o.InternationalOfficeLocations) {
		return nil, false
	}
	return o.InternationalOfficeLocations, true
}

// HasInternationalOfficeLocations returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasInternationalOfficeLocations() bool {
	if o != nil && !IsNil(o.InternationalOfficeLocations) {
		return true
	}

	return false
}

// SetInternationalOfficeLocations gets a reference to the given string and assigns it to the InternationalOfficeLocations field.
func (o *BusinessCardHolderResponse) SetInternationalOfficeLocations(v string) {
	o.InternationalOfficeLocations = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *BusinessCardHolderResponse) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value
func (o *BusinessCardHolderResponse) GetLastModifiedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifiedTime, true
}

// SetLastModifiedTime sets field value
func (o *BusinessCardHolderResponse) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *BusinessCardHolderResponse) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *BusinessCardHolderResponse) SetNotes(v string) {
	o.Notes = &v
}

// GetOfficeLocation returns the OfficeLocation field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetOfficeLocation() AddressResponseModel {
	if o == nil || IsNil(o.OfficeLocation) {
		var ret AddressResponseModel
		return ret
	}
	return *o.OfficeLocation
}

// GetOfficeLocationOk returns a tuple with the OfficeLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetOfficeLocationOk() (*AddressResponseModel, bool) {
	if o == nil || IsNil(o.OfficeLocation) {
		return nil, false
	}
	return o.OfficeLocation, true
}

// HasOfficeLocation returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasOfficeLocation() bool {
	if o != nil && !IsNil(o.OfficeLocation) {
		return true
	}

	return false
}

// SetOfficeLocation gets a reference to the given AddressResponseModel and assigns it to the OfficeLocation field.
func (o *BusinessCardHolderResponse) SetOfficeLocation(v AddressResponseModel) {
	o.OfficeLocation = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *BusinessCardHolderResponse) SetPassword(v string) {
	o.Password = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *BusinessCardHolderResponse) SetPhone(v string) {
	o.Phone = &v
}

// GetPrimaryContact returns the PrimaryContact field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetPrimaryContact() PrimaryContactInfoModel {
	if o == nil || IsNil(o.PrimaryContact) {
		var ret PrimaryContactInfoModel
		return ret
	}
	return *o.PrimaryContact
}

// GetPrimaryContactOk returns a tuple with the PrimaryContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetPrimaryContactOk() (*PrimaryContactInfoModel, bool) {
	if o == nil || IsNil(o.PrimaryContact) {
		return nil, false
	}
	return o.PrimaryContact, true
}

// HasPrimaryContact returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasPrimaryContact() bool {
	if o != nil && !IsNil(o.PrimaryContact) {
		return true
	}

	return false
}

// SetPrimaryContact gets a reference to the given PrimaryContactInfoModel and assigns it to the PrimaryContact field.
func (o *BusinessCardHolderResponse) SetPrimaryContact(v PrimaryContactInfoModel) {
	o.PrimaryContact = &v
}

// GetProprietorIsBeneficialOwner returns the ProprietorIsBeneficialOwner field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetProprietorIsBeneficialOwner() bool {
	if o == nil || IsNil(o.ProprietorIsBeneficialOwner) {
		var ret bool
		return ret
	}
	return *o.ProprietorIsBeneficialOwner
}

// GetProprietorIsBeneficialOwnerOk returns a tuple with the ProprietorIsBeneficialOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetProprietorIsBeneficialOwnerOk() (*bool, bool) {
	if o == nil || IsNil(o.ProprietorIsBeneficialOwner) {
		return nil, false
	}
	return o.ProprietorIsBeneficialOwner, true
}

// HasProprietorIsBeneficialOwner returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasProprietorIsBeneficialOwner() bool {
	if o != nil && !IsNil(o.ProprietorIsBeneficialOwner) {
		return true
	}

	return false
}

// SetProprietorIsBeneficialOwner gets a reference to the given bool and assigns it to the ProprietorIsBeneficialOwner field.
func (o *BusinessCardHolderResponse) SetProprietorIsBeneficialOwner(v bool) {
	o.ProprietorIsBeneficialOwner = &v
}

// GetProprietorOrOfficer returns the ProprietorOrOfficer field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetProprietorOrOfficer() BusinessProprietorResponse {
	if o == nil || IsNil(o.ProprietorOrOfficer) {
		var ret BusinessProprietorResponse
		return ret
	}
	return *o.ProprietorOrOfficer
}

// GetProprietorOrOfficerOk returns a tuple with the ProprietorOrOfficer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetProprietorOrOfficerOk() (*BusinessProprietorResponse, bool) {
	if o == nil || IsNil(o.ProprietorOrOfficer) {
		return nil, false
	}
	return o.ProprietorOrOfficer, true
}

// HasProprietorOrOfficer returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasProprietorOrOfficer() bool {
	if o != nil && !IsNil(o.ProprietorOrOfficer) {
		return true
	}

	return false
}

// SetProprietorOrOfficer gets a reference to the given BusinessProprietorResponse and assigns it to the ProprietorOrOfficer field.
func (o *BusinessCardHolderResponse) SetProprietorOrOfficer(v BusinessProprietorResponse) {
	o.ProprietorOrOfficer = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BusinessCardHolderResponse) SetStatus(v string) {
	o.Status = &v
}

// GetTaxpayerId returns the TaxpayerId field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetTaxpayerId() string {
	if o == nil || IsNil(o.TaxpayerId) {
		var ret string
		return ret
	}
	return *o.TaxpayerId
}

// GetTaxpayerIdOk returns a tuple with the TaxpayerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetTaxpayerIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaxpayerId) {
		return nil, false
	}
	return o.TaxpayerId, true
}

// HasTaxpayerId returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasTaxpayerId() bool {
	if o != nil && !IsNil(o.TaxpayerId) {
		return true
	}

	return false
}

// SetTaxpayerId gets a reference to the given string and assigns it to the TaxpayerId field.
func (o *BusinessCardHolderResponse) SetTaxpayerId(v string) {
	o.TaxpayerId = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *BusinessCardHolderResponse) SetToken(v string) {
	o.Token = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *BusinessCardHolderResponse) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessCardHolderResponse) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *BusinessCardHolderResponse) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *BusinessCardHolderResponse) SetWebsite(v string) {
	o.Website = &v
}

func (o BusinessCardHolderResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BusinessCardHolderResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountHolderGroupToken) {
		toSerialize["account_holder_group_token"] = o.AccountHolderGroupToken
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AttestationConsent) {
		toSerialize["attestation_consent"] = o.AttestationConsent
	}
	if !IsNil(o.AttestationDate) {
		toSerialize["attestation_date"] = o.AttestationDate
	}
	if !IsNil(o.AttesterName) {
		toSerialize["attester_name"] = o.AttesterName
	}
	if !IsNil(o.AttesterTitle) {
		toSerialize["attester_title"] = o.AttesterTitle
	}
	if !IsNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	if !IsNil(o.BeneficialOwner1) {
		toSerialize["beneficial_owner1"] = o.BeneficialOwner1
	}
	if !IsNil(o.BeneficialOwner2) {
		toSerialize["beneficial_owner2"] = o.BeneficialOwner2
	}
	if !IsNil(o.BeneficialOwner3) {
		toSerialize["beneficial_owner3"] = o.BeneficialOwner3
	}
	if !IsNil(o.BeneficialOwner4) {
		toSerialize["beneficial_owner4"] = o.BeneficialOwner4
	}
	if !IsNil(o.BusinessNameDba) {
		toSerialize["business_name_dba"] = o.BusinessNameDba
	}
	if !IsNil(o.BusinessNameLegal) {
		toSerialize["business_name_legal"] = o.BusinessNameLegal
	}
	if !IsNil(o.BusinessType) {
		toSerialize["business_type"] = o.BusinessType
	}
	toSerialize["created_time"] = o.CreatedTime
	if !IsNil(o.DateEstablished) {
		toSerialize["date_established"] = o.DateEstablished
	}
	if !IsNil(o.DunsNumber) {
		toSerialize["duns_number"] = o.DunsNumber
	}
	if !IsNil(o.GeneralBusinessDescription) {
		toSerialize["general_business_description"] = o.GeneralBusinessDescription
	}
	if !IsNil(o.History) {
		toSerialize["history"] = o.History
	}
	if !IsNil(o.Identifications) {
		toSerialize["identifications"] = o.Identifications
	}
	if !IsNil(o.InCurrentLocationSince) {
		toSerialize["in_current_location_since"] = o.InCurrentLocationSince
	}
	if !IsNil(o.Incorporation) {
		toSerialize["incorporation"] = o.Incorporation
	}
	if !IsNil(o.InternationalOfficeLocations) {
		toSerialize["international_office_locations"] = o.InternationalOfficeLocations
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ip_address"] = o.IpAddress
	}
	toSerialize["last_modified_time"] = o.LastModifiedTime
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.OfficeLocation) {
		toSerialize["office_location"] = o.OfficeLocation
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.PrimaryContact) {
		toSerialize["primary_contact"] = o.PrimaryContact
	}
	if !IsNil(o.ProprietorIsBeneficialOwner) {
		toSerialize["proprietor_is_beneficial_owner"] = o.ProprietorIsBeneficialOwner
	}
	if !IsNil(o.ProprietorOrOfficer) {
		toSerialize["proprietor_or_officer"] = o.ProprietorOrOfficer
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TaxpayerId) {
		toSerialize["taxpayer_id"] = o.TaxpayerId
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	return toSerialize, nil
}

func (o *BusinessCardHolderResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		// "created_time",
		// "last_modified_time",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBusinessCardHolderResponse := _BusinessCardHolderResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBusinessCardHolderResponse)

	if err != nil {
		return err
	}

	*o = BusinessCardHolderResponse(varBusinessCardHolderResponse)

	return err
}

type NullableBusinessCardHolderResponse struct {
	value *BusinessCardHolderResponse
	isSet bool
}

func (v NullableBusinessCardHolderResponse) Get() *BusinessCardHolderResponse {
	return v.value
}

func (v *NullableBusinessCardHolderResponse) Set(val *BusinessCardHolderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBusinessCardHolderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBusinessCardHolderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusinessCardHolderResponse(val *BusinessCardHolderResponse) *NullableBusinessCardHolderResponse {
	return &NullableBusinessCardHolderResponse{value: val, isSet: true}
}

func (v NullableBusinessCardHolderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusinessCardHolderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


