/*
Core API

Marqeta's Core API endpoints, conveniently annotated to enable code generation (including SDKs), test cases, and documentation. Currently in beta.

API version: 3.0.19
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CardProductFulfillment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CardProductFulfillment{}

// CardProductFulfillment Determines physical characteristics of a card, along with its bulk shipment information.
type CardProductFulfillment struct {
	// If `true`, an all zero code (000) is allowed as a valid value in an authorization request.
	AllZeroCardSecurityCode *bool `json:"all_zero_card_security_code,omitempty"`
	// Controls the ability to create cards from this card product; `true` allows and `false` disallows the creation of cards.  *NOTE:* The card product's `active` field has no effect on card creation or the behavior of this field.
	AllowCardCreation *bool `json:"allow_card_creation,omitempty"`
	// Prefix of the bank identification number.
	BinPrefix *string `json:"bin_prefix,omitempty"`
	// Enables bulk ordering of cards of this card product type using the `/bulkissuances` endpoint.
	BulkShip *bool `json:"bulk_ship,omitempty"`
	CardPersonalization CardPersonalization `json:"card_personalization"`
	// Enables offline personal identification number (PIN) verification for Europay Mastercard and Visa (EMV, or \"chip-and-PIN\") card payments.
	EnableOfflinePin *bool `json:"enable_offline_pin,omitempty"`
	// Specifies the fulfillment provider.  You can work with providers located in North America, Europe, South America, and the Asia-Pacific region. For more information, see <</developer-guides/managing-physical-cards#_fulfillment_providers_by_location, Fulfillment providers by location>>.  *NOTE:* Expedited processing is available for cards that are fulfilled by link:https://www.arroweye.com/[Arroweye Solutions, window=\"_blank\"], link:https://www.gi-de.com/[G+D, window=\"_blank\"], link:http://www.idemia.com[IDEMIA, window=\"_blank\"], and link:http://perfectplastic.com/[Perfect Plastic Printing, window=\"_blank\"]. You can expedite an order's processing by using the `expedite` field of the <</core-api/cards, card>> or <</core-api/bulk-card-orders, bulkissuance>> object. Contact your Marqeta representative for information regarding the cost of expedited service.
	FulfillmentProvider *string `json:"fulfillment_provider,omitempty"`
	// Card fulfillment provider's package ID.
	PackageId *string `json:"package_id,omitempty"`
	// Specifies the length of the primary account number (PAN).
	PanLength *string `json:"pan_length,omitempty"`
	// Specifies the physical form cards of this card product type will take.
	PaymentInstrument *string `json:"payment_instrument,omitempty"`
	Shipping *Shipping `json:"shipping,omitempty"`
	// A value of `true` sets the text in the `fulfillment.card_personalization.text.name_line_1` and `name_line_2` fields to all uppercase letters. A value of `false` leaves the text in its original state.
	UppercaseNameLines *bool `json:"uppercase_name_lines,omitempty"`
}

type _CardProductFulfillment CardProductFulfillment

// NewCardProductFulfillment instantiates a new CardProductFulfillment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardProductFulfillment(cardPersonalization CardPersonalization) *CardProductFulfillment {
	this := CardProductFulfillment{}
	var allZeroCardSecurityCode bool = false
	this.AllZeroCardSecurityCode = &allZeroCardSecurityCode
	var allowCardCreation bool = true
	this.AllowCardCreation = &allowCardCreation
	var bulkShip bool = false
	this.BulkShip = &bulkShip
	this.CardPersonalization = cardPersonalization
	var enableOfflinePin bool = false
	this.EnableOfflinePin = &enableOfflinePin
	var fulfillmentProvider string = "PERFECTPLASTIC"
	this.FulfillmentProvider = &fulfillmentProvider
	var packageId string = "0"
	this.PackageId = &packageId
	var panLength string = "16"
	this.PanLength = &panLength
	var paymentInstrument string = "PHYSICAL_MSR"
	this.PaymentInstrument = &paymentInstrument
	var uppercaseNameLines bool = true
	this.UppercaseNameLines = &uppercaseNameLines
	return &this
}

// NewCardProductFulfillmentWithDefaults instantiates a new CardProductFulfillment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardProductFulfillmentWithDefaults() *CardProductFulfillment {
	this := CardProductFulfillment{}
	var allZeroCardSecurityCode bool = false
	this.AllZeroCardSecurityCode = &allZeroCardSecurityCode
	var allowCardCreation bool = true
	this.AllowCardCreation = &allowCardCreation
	var bulkShip bool = false
	this.BulkShip = &bulkShip
	var enableOfflinePin bool = false
	this.EnableOfflinePin = &enableOfflinePin
	var fulfillmentProvider string = "PERFECTPLASTIC"
	this.FulfillmentProvider = &fulfillmentProvider
	var packageId string = "0"
	this.PackageId = &packageId
	var panLength string = "16"
	this.PanLength = &panLength
	var paymentInstrument string = "PHYSICAL_MSR"
	this.PaymentInstrument = &paymentInstrument
	var uppercaseNameLines bool = true
	this.UppercaseNameLines = &uppercaseNameLines
	return &this
}

// GetAllZeroCardSecurityCode returns the AllZeroCardSecurityCode field value if set, zero value otherwise.
func (o *CardProductFulfillment) GetAllZeroCardSecurityCode() bool {
	if o == nil || IsNil(o.AllZeroCardSecurityCode) {
		var ret bool
		return ret
	}
	return *o.AllZeroCardSecurityCode
}

// GetAllZeroCardSecurityCodeOk returns a tuple with the AllZeroCardSecurityCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductFulfillment) GetAllZeroCardSecurityCodeOk() (*bool, bool) {
	if o == nil || IsNil(o.AllZeroCardSecurityCode) {
		return nil, false
	}
	return o.AllZeroCardSecurityCode, true
}

// HasAllZeroCardSecurityCode returns a boolean if a field has been set.
func (o *CardProductFulfillment) HasAllZeroCardSecurityCode() bool {
	if o != nil && !IsNil(o.AllZeroCardSecurityCode) {
		return true
	}

	return false
}

// SetAllZeroCardSecurityCode gets a reference to the given bool and assigns it to the AllZeroCardSecurityCode field.
func (o *CardProductFulfillment) SetAllZeroCardSecurityCode(v bool) {
	o.AllZeroCardSecurityCode = &v
}

// GetAllowCardCreation returns the AllowCardCreation field value if set, zero value otherwise.
func (o *CardProductFulfillment) GetAllowCardCreation() bool {
	if o == nil || IsNil(o.AllowCardCreation) {
		var ret bool
		return ret
	}
	return *o.AllowCardCreation
}

// GetAllowCardCreationOk returns a tuple with the AllowCardCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductFulfillment) GetAllowCardCreationOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowCardCreation) {
		return nil, false
	}
	return o.AllowCardCreation, true
}

// HasAllowCardCreation returns a boolean if a field has been set.
func (o *CardProductFulfillment) HasAllowCardCreation() bool {
	if o != nil && !IsNil(o.AllowCardCreation) {
		return true
	}

	return false
}

// SetAllowCardCreation gets a reference to the given bool and assigns it to the AllowCardCreation field.
func (o *CardProductFulfillment) SetAllowCardCreation(v bool) {
	o.AllowCardCreation = &v
}

// GetBinPrefix returns the BinPrefix field value if set, zero value otherwise.
func (o *CardProductFulfillment) GetBinPrefix() string {
	if o == nil || IsNil(o.BinPrefix) {
		var ret string
		return ret
	}
	return *o.BinPrefix
}

// GetBinPrefixOk returns a tuple with the BinPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductFulfillment) GetBinPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.BinPrefix) {
		return nil, false
	}
	return o.BinPrefix, true
}

// HasBinPrefix returns a boolean if a field has been set.
func (o *CardProductFulfillment) HasBinPrefix() bool {
	if o != nil && !IsNil(o.BinPrefix) {
		return true
	}

	return false
}

// SetBinPrefix gets a reference to the given string and assigns it to the BinPrefix field.
func (o *CardProductFulfillment) SetBinPrefix(v string) {
	o.BinPrefix = &v
}

// GetBulkShip returns the BulkShip field value if set, zero value otherwise.
func (o *CardProductFulfillment) GetBulkShip() bool {
	if o == nil || IsNil(o.BulkShip) {
		var ret bool
		return ret
	}
	return *o.BulkShip
}

// GetBulkShipOk returns a tuple with the BulkShip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductFulfillment) GetBulkShipOk() (*bool, bool) {
	if o == nil || IsNil(o.BulkShip) {
		return nil, false
	}
	return o.BulkShip, true
}

// HasBulkShip returns a boolean if a field has been set.
func (o *CardProductFulfillment) HasBulkShip() bool {
	if o != nil && !IsNil(o.BulkShip) {
		return true
	}

	return false
}

// SetBulkShip gets a reference to the given bool and assigns it to the BulkShip field.
func (o *CardProductFulfillment) SetBulkShip(v bool) {
	o.BulkShip = &v
}

// GetCardPersonalization returns the CardPersonalization field value
func (o *CardProductFulfillment) GetCardPersonalization() CardPersonalization {
	if o == nil {
		var ret CardPersonalization
		return ret
	}

	return o.CardPersonalization
}

// GetCardPersonalizationOk returns a tuple with the CardPersonalization field value
// and a boolean to check if the value has been set.
func (o *CardProductFulfillment) GetCardPersonalizationOk() (*CardPersonalization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardPersonalization, true
}

// SetCardPersonalization sets field value
func (o *CardProductFulfillment) SetCardPersonalization(v CardPersonalization) {
	o.CardPersonalization = v
}

// GetEnableOfflinePin returns the EnableOfflinePin field value if set, zero value otherwise.
func (o *CardProductFulfillment) GetEnableOfflinePin() bool {
	if o == nil || IsNil(o.EnableOfflinePin) {
		var ret bool
		return ret
	}
	return *o.EnableOfflinePin
}

// GetEnableOfflinePinOk returns a tuple with the EnableOfflinePin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductFulfillment) GetEnableOfflinePinOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableOfflinePin) {
		return nil, false
	}
	return o.EnableOfflinePin, true
}

// HasEnableOfflinePin returns a boolean if a field has been set.
func (o *CardProductFulfillment) HasEnableOfflinePin() bool {
	if o != nil && !IsNil(o.EnableOfflinePin) {
		return true
	}

	return false
}

// SetEnableOfflinePin gets a reference to the given bool and assigns it to the EnableOfflinePin field.
func (o *CardProductFulfillment) SetEnableOfflinePin(v bool) {
	o.EnableOfflinePin = &v
}

// GetFulfillmentProvider returns the FulfillmentProvider field value if set, zero value otherwise.
func (o *CardProductFulfillment) GetFulfillmentProvider() string {
	if o == nil || IsNil(o.FulfillmentProvider) {
		var ret string
		return ret
	}
	return *o.FulfillmentProvider
}

// GetFulfillmentProviderOk returns a tuple with the FulfillmentProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductFulfillment) GetFulfillmentProviderOk() (*string, bool) {
	if o == nil || IsNil(o.FulfillmentProvider) {
		return nil, false
	}
	return o.FulfillmentProvider, true
}

// HasFulfillmentProvider returns a boolean if a field has been set.
func (o *CardProductFulfillment) HasFulfillmentProvider() bool {
	if o != nil && !IsNil(o.FulfillmentProvider) {
		return true
	}

	return false
}

// SetFulfillmentProvider gets a reference to the given string and assigns it to the FulfillmentProvider field.
func (o *CardProductFulfillment) SetFulfillmentProvider(v string) {
	o.FulfillmentProvider = &v
}

// GetPackageId returns the PackageId field value if set, zero value otherwise.
func (o *CardProductFulfillment) GetPackageId() string {
	if o == nil || IsNil(o.PackageId) {
		var ret string
		return ret
	}
	return *o.PackageId
}

// GetPackageIdOk returns a tuple with the PackageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductFulfillment) GetPackageIdOk() (*string, bool) {
	if o == nil || IsNil(o.PackageId) {
		return nil, false
	}
	return o.PackageId, true
}

// HasPackageId returns a boolean if a field has been set.
func (o *CardProductFulfillment) HasPackageId() bool {
	if o != nil && !IsNil(o.PackageId) {
		return true
	}

	return false
}

// SetPackageId gets a reference to the given string and assigns it to the PackageId field.
func (o *CardProductFulfillment) SetPackageId(v string) {
	o.PackageId = &v
}

// GetPanLength returns the PanLength field value if set, zero value otherwise.
func (o *CardProductFulfillment) GetPanLength() string {
	if o == nil || IsNil(o.PanLength) {
		var ret string
		return ret
	}
	return *o.PanLength
}

// GetPanLengthOk returns a tuple with the PanLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductFulfillment) GetPanLengthOk() (*string, bool) {
	if o == nil || IsNil(o.PanLength) {
		return nil, false
	}
	return o.PanLength, true
}

// HasPanLength returns a boolean if a field has been set.
func (o *CardProductFulfillment) HasPanLength() bool {
	if o != nil && !IsNil(o.PanLength) {
		return true
	}

	return false
}

// SetPanLength gets a reference to the given string and assigns it to the PanLength field.
func (o *CardProductFulfillment) SetPanLength(v string) {
	o.PanLength = &v
}

// GetPaymentInstrument returns the PaymentInstrument field value if set, zero value otherwise.
func (o *CardProductFulfillment) GetPaymentInstrument() string {
	if o == nil || IsNil(o.PaymentInstrument) {
		var ret string
		return ret
	}
	return *o.PaymentInstrument
}

// GetPaymentInstrumentOk returns a tuple with the PaymentInstrument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductFulfillment) GetPaymentInstrumentOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentInstrument) {
		return nil, false
	}
	return o.PaymentInstrument, true
}

// HasPaymentInstrument returns a boolean if a field has been set.
func (o *CardProductFulfillment) HasPaymentInstrument() bool {
	if o != nil && !IsNil(o.PaymentInstrument) {
		return true
	}

	return false
}

// SetPaymentInstrument gets a reference to the given string and assigns it to the PaymentInstrument field.
func (o *CardProductFulfillment) SetPaymentInstrument(v string) {
	o.PaymentInstrument = &v
}

// GetShipping returns the Shipping field value if set, zero value otherwise.
func (o *CardProductFulfillment) GetShipping() Shipping {
	if o == nil || IsNil(o.Shipping) {
		var ret Shipping
		return ret
	}
	return *o.Shipping
}

// GetShippingOk returns a tuple with the Shipping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductFulfillment) GetShippingOk() (*Shipping, bool) {
	if o == nil || IsNil(o.Shipping) {
		return nil, false
	}
	return o.Shipping, true
}

// HasShipping returns a boolean if a field has been set.
func (o *CardProductFulfillment) HasShipping() bool {
	if o != nil && !IsNil(o.Shipping) {
		return true
	}

	return false
}

// SetShipping gets a reference to the given Shipping and assigns it to the Shipping field.
func (o *CardProductFulfillment) SetShipping(v Shipping) {
	o.Shipping = &v
}

// GetUppercaseNameLines returns the UppercaseNameLines field value if set, zero value otherwise.
func (o *CardProductFulfillment) GetUppercaseNameLines() bool {
	if o == nil || IsNil(o.UppercaseNameLines) {
		var ret bool
		return ret
	}
	return *o.UppercaseNameLines
}

// GetUppercaseNameLinesOk returns a tuple with the UppercaseNameLines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductFulfillment) GetUppercaseNameLinesOk() (*bool, bool) {
	if o == nil || IsNil(o.UppercaseNameLines) {
		return nil, false
	}
	return o.UppercaseNameLines, true
}

// HasUppercaseNameLines returns a boolean if a field has been set.
func (o *CardProductFulfillment) HasUppercaseNameLines() bool {
	if o != nil && !IsNil(o.UppercaseNameLines) {
		return true
	}

	return false
}

// SetUppercaseNameLines gets a reference to the given bool and assigns it to the UppercaseNameLines field.
func (o *CardProductFulfillment) SetUppercaseNameLines(v bool) {
	o.UppercaseNameLines = &v
}

func (o CardProductFulfillment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CardProductFulfillment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllZeroCardSecurityCode) {
		toSerialize["all_zero_card_security_code"] = o.AllZeroCardSecurityCode
	}
	if !IsNil(o.AllowCardCreation) {
		toSerialize["allow_card_creation"] = o.AllowCardCreation
	}
	if !IsNil(o.BinPrefix) {
		toSerialize["bin_prefix"] = o.BinPrefix
	}
	if !IsNil(o.BulkShip) {
		toSerialize["bulk_ship"] = o.BulkShip
	}
	toSerialize["card_personalization"] = o.CardPersonalization
	if !IsNil(o.EnableOfflinePin) {
		toSerialize["enable_offline_pin"] = o.EnableOfflinePin
	}
	if !IsNil(o.FulfillmentProvider) {
		toSerialize["fulfillment_provider"] = o.FulfillmentProvider
	}
	if !IsNil(o.PackageId) {
		toSerialize["package_id"] = o.PackageId
	}
	if !IsNil(o.PanLength) {
		toSerialize["pan_length"] = o.PanLength
	}
	if !IsNil(o.PaymentInstrument) {
		toSerialize["payment_instrument"] = o.PaymentInstrument
	}
	if !IsNil(o.Shipping) {
		toSerialize["shipping"] = o.Shipping
	}
	if !IsNil(o.UppercaseNameLines) {
		toSerialize["uppercase_name_lines"] = o.UppercaseNameLines
	}
	return toSerialize, nil
}

func (o *CardProductFulfillment) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		//"card_personalization",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCardProductFulfillment := _CardProductFulfillment{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCardProductFulfillment)

	if err != nil {
		return err
	}

	*o = CardProductFulfillment(varCardProductFulfillment)

	return err
}

type NullableCardProductFulfillment struct {
	value *CardProductFulfillment
	isSet bool
}

func (v NullableCardProductFulfillment) Get() *CardProductFulfillment {
	return v.value
}

func (v *NullableCardProductFulfillment) Set(val *CardProductFulfillment) {
	v.value = val
	v.isSet = true
}

func (v NullableCardProductFulfillment) IsSet() bool {
	return v.isSet
}

func (v *NullableCardProductFulfillment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardProductFulfillment(val *CardProductFulfillment) *NullableCardProductFulfillment {
	return &NullableCardProductFulfillment{value: val, isSet: true}
}

func (v NullableCardProductFulfillment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardProductFulfillment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


