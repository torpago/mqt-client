/*
Marqeta Core API

Simplified management of your payment programs

API version: 3.0.0
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CardTransactionResponse Contains information about the transaction that was simulated.
type CardTransactionResponse struct {
	Transaction *TransactionModel `json:"transaction,omitempty"`
}

// NewCardTransactionResponse instantiates a new CardTransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardTransactionResponse() *CardTransactionResponse {
	this := CardTransactionResponse{}
	return &this
}

// NewCardTransactionResponseWithDefaults instantiates a new CardTransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardTransactionResponseWithDefaults() *CardTransactionResponse {
	this := CardTransactionResponse{}
	return &this
}

// GetTransaction returns the Transaction field value if set, zero value otherwise.
func (o *CardTransactionResponse) GetTransaction() TransactionModel {
	if o == nil || o.Transaction == nil {
		var ret TransactionModel
		return ret
	}
	return *o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardTransactionResponse) GetTransactionOk() (*TransactionModel, bool) {
	if o == nil || o.Transaction == nil {
		return nil, false
	}
	return o.Transaction, true
}

// HasTransaction returns a boolean if a field has been set.
func (o *CardTransactionResponse) HasTransaction() bool {
	if o != nil && o.Transaction != nil {
		return true
	}

	return false
}

// SetTransaction gets a reference to the given TransactionModel and assigns it to the Transaction field.
func (o *CardTransactionResponse) SetTransaction(v TransactionModel) {
	o.Transaction = &v
}

func (o CardTransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Transaction != nil {
		toSerialize["transaction"] = o.Transaction
	}
	return json.Marshal(toSerialize)
}

type NullableCardTransactionResponse struct {
	value *CardTransactionResponse
	isSet bool
}

func (v NullableCardTransactionResponse) Get() *CardTransactionResponse {
	return v.value
}

func (v *NullableCardTransactionResponse) Set(val *CardTransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCardTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCardTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardTransactionResponse(val *CardTransactionResponse) *NullableCardTransactionResponse {
	return &NullableCardTransactionResponse{value: val, isSet: true}
}

func (v NullableCardTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


