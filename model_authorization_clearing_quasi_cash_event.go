/*
Marqeta Core API

Simplified management of your payment programs

API version: 3.0.0
Contact: support@marqeta.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AuthorizationClearingQuasiCashEvent struct for AuthorizationClearingQuasiCashEvent
type AuthorizationClearingQuasiCashEvent struct {
	CardTransactionSimulation
	// Unique identifier of the card. Useful when a single account holder has multiple cards.
	PrecedingRelatedTransactionToken string `json:"preceding_related_transaction_token"`
}

// NewAuthorizationClearingQuasiCashEvent instantiates a new AuthorizationClearingQuasiCashEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationClearingQuasiCashEvent(precedingRelatedTransactionToken string, amount float32) *AuthorizationClearingQuasiCashEvent {
	this := AuthorizationClearingQuasiCashEvent{}
	this.Amount = &amount
	var isPreauthorization bool = false
	this.IsPreauthorization = &isPreauthorization
	var forcePost bool = false
	this.ForcePost = &forcePost
	this.PrecedingRelatedTransactionToken = precedingRelatedTransactionToken
	return &this
}

// NewAuthorizationClearingQuasiCashEventWithDefaults instantiates a new AuthorizationClearingQuasiCashEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationClearingQuasiCashEventWithDefaults() *AuthorizationClearingQuasiCashEvent {
	this := AuthorizationClearingQuasiCashEvent{}
	return &this
}

// GetPrecedingRelatedTransactionToken returns the PrecedingRelatedTransactionToken field value
func (o *AuthorizationClearingQuasiCashEvent) GetPrecedingRelatedTransactionToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrecedingRelatedTransactionToken
}

// GetPrecedingRelatedTransactionTokenOk returns a tuple with the PrecedingRelatedTransactionToken field value
// and a boolean to check if the value has been set.
func (o *AuthorizationClearingQuasiCashEvent) GetPrecedingRelatedTransactionTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrecedingRelatedTransactionToken, true
}

// SetPrecedingRelatedTransactionToken sets field value
func (o *AuthorizationClearingQuasiCashEvent) SetPrecedingRelatedTransactionToken(v string) {
	o.PrecedingRelatedTransactionToken = v
}

func (o AuthorizationClearingQuasiCashEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedCardTransactionSimulation, errCardTransactionSimulation := json.Marshal(o.CardTransactionSimulation)
	if errCardTransactionSimulation != nil {
		return []byte{}, errCardTransactionSimulation
	}
	errCardTransactionSimulation = json.Unmarshal([]byte(serializedCardTransactionSimulation), &toSerialize)
	if errCardTransactionSimulation != nil {
		return []byte{}, errCardTransactionSimulation
	}
	if true {
		toSerialize["preceding_related_transaction_token"] = o.PrecedingRelatedTransactionToken
	}
	return json.Marshal(toSerialize)
}

type NullableAuthorizationClearingQuasiCashEvent struct {
	value *AuthorizationClearingQuasiCashEvent
	isSet bool
}

func (v NullableAuthorizationClearingQuasiCashEvent) Get() *AuthorizationClearingQuasiCashEvent {
	return v.value
}

func (v *NullableAuthorizationClearingQuasiCashEvent) Set(val *AuthorizationClearingQuasiCashEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationClearingQuasiCashEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationClearingQuasiCashEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationClearingQuasiCashEvent(val *AuthorizationClearingQuasiCashEvent) *NullableAuthorizationClearingQuasiCashEvent {
	return &NullableAuthorizationClearingQuasiCashEvent{value: val, isSet: true}
}

func (v NullableAuthorizationClearingQuasiCashEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationClearingQuasiCashEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


